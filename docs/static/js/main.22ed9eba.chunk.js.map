{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GiftExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACtCC,EADsC,KAC1BC,EAD0B,KAe9C,OACI,0BAAMC,SAVW,SAACC,GAElB,GADAA,EAAEC,iBAC+B,IAA7BJ,EAAWK,OAAOC,OAClB,OAAO,EAGXR,GAAc,SAAAS,GAAU,OAAKP,EAAWK,QAAhB,mBAA2BE,SAK/C,2BAAOC,KAAK,OAAOC,MAAQT,EAAaU,SAftB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCJlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAUF,GADvF,qBAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QATtB,kBAabY,GAba,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACXpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OATIC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAAAC,GACnBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACd,IAEDe,EDb0BK,CAAYpB,GAAhCW,EADwB,EAC7BL,KAAaQ,EADgB,EAChBA,QAErB,OACI,oCACI,4BAAMd,GACJc,GAAW,yCACb,yBAAKlB,UAAU,aAEPe,EAAOH,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaY,IAAMZ,EAAIC,IAAUD,UEV5Ca,EAAgB,WAAO,IAAD,EACO1C,mBAAS,CAAC,WADjB,mBACvBQ,EADuB,KACXT,EADW,KAG/B,OACI,oCACI,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6CACA,6BACA,4BAEQS,EAAWoB,KAAI,SAACR,EAAUuB,GAAX,OACX,kBAAC,EAAD,CAAUvB,SAAWA,EAAWqB,IAAME,UCV9DC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.22ed9eba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [ inputValue, setInputValue ] = useState(\"\");\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length === 0) {\r\n            return false;\r\n        }\r\n\r\n        setCategories(categories => [inputValue.trim(), ...categories]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input type=\"text\" value={ inputValue } onChange= { handleInputChange } />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PE43oGdtLB8eVitDKBJ1Usl0Y0WLF9kw&q=${ encodeURI(category) }&limit=2`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n   return gifs;\r\n}","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGif } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GiftGrid= ({ category }) => {\r\n    const { data:images ,loading } = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading...</p>  }\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map(img => \r\n                        <GifGridItem key={ img.id } { ...img } />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n        useEffect(() => {\r\n            getGifs(category).then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n        }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid  } from \"./components/GifGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n    const [ categories, setCategories ] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <h2>GiftExpertApp</h2>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category, index) => (\r\n                        <GiftGrid category={ category } key={ index }/> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}